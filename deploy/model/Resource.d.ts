import IModel from '@/gs2/core/interface/IModel';
import { OutputField } from './OutputField';
export declare class Resource implements IModel {
    private resourceId;
    private type;
    private name;
    private request;
    private response;
    private rollbackContext;
    private rollbackRequest;
    private rollbackAfter;
    private outputFields;
    private workId;
    private createdAt;
    getResourceId(): string | null;
    setResourceId(resourceId: string | null): this;
    withResourceId(resourceId: string | null): this;
    getType(): string | null;
    setType(type: string | null): this;
    withType(type: string | null): this;
    getName(): string | null;
    setName(name: string | null): this;
    withName(name: string | null): this;
    getRequest(): string | null;
    setRequest(request: string | null): this;
    withRequest(request: string | null): this;
    getResponse(): string | null;
    setResponse(response: string | null): this;
    withResponse(response: string | null): this;
    getRollbackContext(): string | null;
    setRollbackContext(rollbackContext: string | null): this;
    withRollbackContext(rollbackContext: string | null): this;
    getRollbackRequest(): string | null;
    setRollbackRequest(rollbackRequest: string | null): this;
    withRollbackRequest(rollbackRequest: string | null): this;
    getRollbackAfter(): string[] | null;
    setRollbackAfter(rollbackAfter: string[] | null): this;
    withRollbackAfter(rollbackAfter: string[] | null): this;
    getOutputFields(): OutputField[] | null;
    setOutputFields(outputFields: OutputField[] | null): this;
    withOutputFields(outputFields: OutputField[] | null): this;
    getWorkId(): string | null;
    setWorkId(workId: string | null): this;
    withWorkId(workId: string | null): this;
    getCreatedAt(): number | null;
    setCreatedAt(createdAt: number | null): this;
    withCreatedAt(createdAt: number | null): this;
    static fromDict(data: {
        [key: string]: any;
    }): Resource | null;
    toDict(): {
        [key: string]: any;
    };
}
