import IModel from '../../core/interface/IModel';
import * as Gs2Showcase from '../../showcase/model';
export default class SalesItemMaster implements IModel {
    private salesItemId;
    private name;
    private description;
    private metadata;
    private verifyActions;
    private consumeActions;
    private acquireActions;
    private createdAt;
    private updatedAt;
    private revision;
    static getRegion(grn: string): string | null;
    static getOwnerId(grn: string): string | null;
    static getNamespaceName(grn: string): string | null;
    static getSalesItemName(grn: string): string | null;
    static isValid(grn: string): boolean;
    static createGrn(region: string | null, ownerId: string | null, namespaceName: string | null, salesItemName: string | null): string | null;
    getSalesItemId(): string | null;
    setSalesItemId(salesItemId: string | null): this;
    withSalesItemId(salesItemId: string | null): this;
    getName(): string | null;
    setName(name: string | null): this;
    withName(name: string | null): this;
    getDescription(): string | null;
    setDescription(description: string | null): this;
    withDescription(description: string | null): this;
    getMetadata(): string | null;
    setMetadata(metadata: string | null): this;
    withMetadata(metadata: string | null): this;
    getVerifyActions(): Gs2Showcase.VerifyAction[] | null;
    setVerifyActions(verifyActions: Gs2Showcase.VerifyAction[] | null): this;
    withVerifyActions(verifyActions: Gs2Showcase.VerifyAction[] | null): this;
    getConsumeActions(): Gs2Showcase.ConsumeAction[] | null;
    setConsumeActions(consumeActions: Gs2Showcase.ConsumeAction[] | null): this;
    withConsumeActions(consumeActions: Gs2Showcase.ConsumeAction[] | null): this;
    getAcquireActions(): Gs2Showcase.AcquireAction[] | null;
    setAcquireActions(acquireActions: Gs2Showcase.AcquireAction[] | null): this;
    withAcquireActions(acquireActions: Gs2Showcase.AcquireAction[] | null): this;
    getCreatedAt(): number | null;
    setCreatedAt(createdAt: number | null): this;
    withCreatedAt(createdAt: number | null): this;
    getUpdatedAt(): number | null;
    setUpdatedAt(updatedAt: number | null): this;
    withUpdatedAt(updatedAt: number | null): this;
    getRevision(): number | null;
    setRevision(revision: number | null): this;
    withRevision(revision: number | null): this;
    static fromDict(data: {
        [key: string]: any;
    }): SalesItemMaster | null;
    toDict(): {
        [key: string]: any;
    };
}
