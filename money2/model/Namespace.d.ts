import IModel from '../../core/interface/IModel';
import * as Gs2Money2 from '../../money2/model';
export default class Namespace implements IModel {
    private namespaceId;
    private name;
    private description;
    private currencyUsagePriority;
    private sharedFreeCurrency;
    private platformSetting;
    private depositBalanceScript;
    private withdrawBalanceScript;
    private verifyReceiptScript;
    private subscribeScript;
    private renewScript;
    private unsubscribeScript;
    private takeOverScript;
    private changeSubscriptionStatusNotification;
    private logSetting;
    private createdAt;
    private updatedAt;
    private revision;
    static getRegion(grn: string): string | null;
    static getOwnerId(grn: string): string | null;
    static getNamespaceName(grn: string): string | null;
    static isValid(grn: string): boolean;
    static createGrn(region: string | null, ownerId: string | null, namespaceName: string | null): string | null;
    getNamespaceId(): string | null;
    setNamespaceId(namespaceId: string | null): this;
    withNamespaceId(namespaceId: string | null): this;
    getName(): string | null;
    setName(name: string | null): this;
    withName(name: string | null): this;
    getDescription(): string | null;
    setDescription(description: string | null): this;
    withDescription(description: string | null): this;
    getCurrencyUsagePriority(): string | null;
    setCurrencyUsagePriority(currencyUsagePriority: string | null): this;
    withCurrencyUsagePriority(currencyUsagePriority: string | null): this;
    getSharedFreeCurrency(): boolean | null;
    setSharedFreeCurrency(sharedFreeCurrency: boolean | null): this;
    withSharedFreeCurrency(sharedFreeCurrency: boolean | null): this;
    getPlatformSetting(): Gs2Money2.PlatformSetting | null;
    setPlatformSetting(platformSetting: Gs2Money2.PlatformSetting | null): this;
    withPlatformSetting(platformSetting: Gs2Money2.PlatformSetting | null): this;
    getDepositBalanceScript(): Gs2Money2.ScriptSetting | null;
    setDepositBalanceScript(depositBalanceScript: Gs2Money2.ScriptSetting | null): this;
    withDepositBalanceScript(depositBalanceScript: Gs2Money2.ScriptSetting | null): this;
    getWithdrawBalanceScript(): Gs2Money2.ScriptSetting | null;
    setWithdrawBalanceScript(withdrawBalanceScript: Gs2Money2.ScriptSetting | null): this;
    withWithdrawBalanceScript(withdrawBalanceScript: Gs2Money2.ScriptSetting | null): this;
    getVerifyReceiptScript(): Gs2Money2.ScriptSetting | null;
    setVerifyReceiptScript(verifyReceiptScript: Gs2Money2.ScriptSetting | null): this;
    withVerifyReceiptScript(verifyReceiptScript: Gs2Money2.ScriptSetting | null): this;
    getSubscribeScript(): string | null;
    setSubscribeScript(subscribeScript: string | null): this;
    withSubscribeScript(subscribeScript: string | null): this;
    getRenewScript(): string | null;
    setRenewScript(renewScript: string | null): this;
    withRenewScript(renewScript: string | null): this;
    getUnsubscribeScript(): string | null;
    setUnsubscribeScript(unsubscribeScript: string | null): this;
    withUnsubscribeScript(unsubscribeScript: string | null): this;
    getTakeOverScript(): Gs2Money2.ScriptSetting | null;
    setTakeOverScript(takeOverScript: Gs2Money2.ScriptSetting | null): this;
    withTakeOverScript(takeOverScript: Gs2Money2.ScriptSetting | null): this;
    getChangeSubscriptionStatusNotification(): Gs2Money2.NotificationSetting | null;
    setChangeSubscriptionStatusNotification(changeSubscriptionStatusNotification: Gs2Money2.NotificationSetting | null): this;
    withChangeSubscriptionStatusNotification(changeSubscriptionStatusNotification: Gs2Money2.NotificationSetting | null): this;
    getLogSetting(): Gs2Money2.LogSetting | null;
    setLogSetting(logSetting: Gs2Money2.LogSetting | null): this;
    withLogSetting(logSetting: Gs2Money2.LogSetting | null): this;
    getCreatedAt(): number | null;
    setCreatedAt(createdAt: number | null): this;
    withCreatedAt(createdAt: number | null): this;
    getUpdatedAt(): number | null;
    setUpdatedAt(updatedAt: number | null): this;
    withUpdatedAt(updatedAt: number | null): this;
    getRevision(): number | null;
    setRevision(revision: number | null): this;
    withRevision(revision: number | null): this;
    static fromDict(data: {
        [key: string]: any;
    }): Namespace | null;
    toDict(): {
        [key: string]: any;
    };
}
