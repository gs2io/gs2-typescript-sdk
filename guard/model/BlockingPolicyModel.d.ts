import IModel from '../../core/interface/IModel';
export default class BlockingPolicyModel implements IModel {
    private passServices;
    private defaultRestriction;
    private locationDetection;
    private locations;
    private locationRestriction;
    private anonymousIpDetection;
    private anonymousIpRestriction;
    private hostingProviderIpDetection;
    private hostingProviderIpRestriction;
    private reputationIpDetection;
    private reputationIpRestriction;
    private ipAddressesDetection;
    private ipAddresses;
    private ipAddressRestriction;
    getPassServices(): string[] | null;
    setPassServices(passServices: string[] | null): this;
    withPassServices(passServices: string[] | null): this;
    getDefaultRestriction(): string | null;
    setDefaultRestriction(defaultRestriction: string | null): this;
    withDefaultRestriction(defaultRestriction: string | null): this;
    getLocationDetection(): string | null;
    setLocationDetection(locationDetection: string | null): this;
    withLocationDetection(locationDetection: string | null): this;
    getLocations(): string[] | null;
    setLocations(locations: string[] | null): this;
    withLocations(locations: string[] | null): this;
    getLocationRestriction(): string | null;
    setLocationRestriction(locationRestriction: string | null): this;
    withLocationRestriction(locationRestriction: string | null): this;
    getAnonymousIpDetection(): string | null;
    setAnonymousIpDetection(anonymousIpDetection: string | null): this;
    withAnonymousIpDetection(anonymousIpDetection: string | null): this;
    getAnonymousIpRestriction(): string | null;
    setAnonymousIpRestriction(anonymousIpRestriction: string | null): this;
    withAnonymousIpRestriction(anonymousIpRestriction: string | null): this;
    getHostingProviderIpDetection(): string | null;
    setHostingProviderIpDetection(hostingProviderIpDetection: string | null): this;
    withHostingProviderIpDetection(hostingProviderIpDetection: string | null): this;
    getHostingProviderIpRestriction(): string | null;
    setHostingProviderIpRestriction(hostingProviderIpRestriction: string | null): this;
    withHostingProviderIpRestriction(hostingProviderIpRestriction: string | null): this;
    getReputationIpDetection(): string | null;
    setReputationIpDetection(reputationIpDetection: string | null): this;
    withReputationIpDetection(reputationIpDetection: string | null): this;
    getReputationIpRestriction(): string | null;
    setReputationIpRestriction(reputationIpRestriction: string | null): this;
    withReputationIpRestriction(reputationIpRestriction: string | null): this;
    getIpAddressesDetection(): string | null;
    setIpAddressesDetection(ipAddressesDetection: string | null): this;
    withIpAddressesDetection(ipAddressesDetection: string | null): this;
    getIpAddresses(): string[] | null;
    setIpAddresses(ipAddresses: string[] | null): this;
    withIpAddresses(ipAddresses: string[] | null): this;
    getIpAddressRestriction(): string | null;
    setIpAddressRestriction(ipAddressRestriction: string | null): this;
    withIpAddressRestriction(ipAddressRestriction: string | null): this;
    static fromDict(data: {
        [key: string]: any;
    }): BlockingPolicyModel | null;
    toDict(): {
        [key: string]: any;
    };
}
