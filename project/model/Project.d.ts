import IModel from '../../core/interface/IModel';
import * as Gs2Project from '../../project/model';
export default class Project implements IModel {
    private projectId;
    private accountName;
    private name;
    private description;
    private plan;
    private regions;
    private billingMethodName;
    private enableEventBridge;
    private currency;
    private eventBridgeAwsAccountId;
    private eventBridgeAwsRegion;
    private createdAt;
    private updatedAt;
    static getAccountName(grn: string): string | null;
    static getProjectName(grn: string): string | null;
    static isValid(grn: string): boolean;
    static createGrn(accountName: string | null, projectName: string | null): string | null;
    getProjectId(): string | null;
    setProjectId(projectId: string | null): this;
    withProjectId(projectId: string | null): this;
    getAccountName(): string | null;
    setAccountName(accountName: string | null): this;
    withAccountName(accountName: string | null): this;
    getName(): string | null;
    setName(name: string | null): this;
    withName(name: string | null): this;
    getDescription(): string | null;
    setDescription(description: string | null): this;
    withDescription(description: string | null): this;
    getPlan(): string | null;
    setPlan(plan: string | null): this;
    withPlan(plan: string | null): this;
    getRegions(): Gs2Project.Gs2Region[] | null;
    setRegions(regions: Gs2Project.Gs2Region[] | null): this;
    withRegions(regions: Gs2Project.Gs2Region[] | null): this;
    getBillingMethodName(): string | null;
    setBillingMethodName(billingMethodName: string | null): this;
    withBillingMethodName(billingMethodName: string | null): this;
    getEnableEventBridge(): string | null;
    setEnableEventBridge(enableEventBridge: string | null): this;
    withEnableEventBridge(enableEventBridge: string | null): this;
    getCurrency(): string | null;
    setCurrency(currency: string | null): this;
    withCurrency(currency: string | null): this;
    getEventBridgeAwsAccountId(): string | null;
    setEventBridgeAwsAccountId(eventBridgeAwsAccountId: string | null): this;
    withEventBridgeAwsAccountId(eventBridgeAwsAccountId: string | null): this;
    getEventBridgeAwsRegion(): string | null;
    setEventBridgeAwsRegion(eventBridgeAwsRegion: string | null): this;
    withEventBridgeAwsRegion(eventBridgeAwsRegion: string | null): this;
    getCreatedAt(): number | null;
    setCreatedAt(createdAt: number | null): this;
    withCreatedAt(createdAt: number | null): this;
    getUpdatedAt(): number | null;
    setUpdatedAt(updatedAt: number | null): this;
    withUpdatedAt(updatedAt: number | null): this;
    static fromDict(data: {
        [key: string]: any;
    }): Project | null;
    toDict(): {
        [key: string]: any;
    };
}
