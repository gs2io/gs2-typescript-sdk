import IRequest from '../../core/interface/IRequest';
import * as Gs2Quest from '../model';
export default class UpdateQuestModelMasterRequest implements IRequest {
    private requestId;
    private contextStack;
    private namespaceName;
    private questGroupName;
    private questName;
    private description;
    private metadata;
    private contents;
    private challengePeriodEventId;
    private firstCompleteAcquireActions;
    private verifyActions;
    private consumeActions;
    private failedAcquireActions;
    private premiseQuestNames;
    getRequestId(): string | null;
    setRequestId(requestId: string | null): this;
    withRequestId(requestId: string | null): this;
    getContextStack(): string | null;
    setContextStack(contextStack: string | null): this;
    withContextStack(contextStack: string | null): this;
    getNamespaceName(): string | null;
    setNamespaceName(namespaceName: string | null): this;
    withNamespaceName(namespaceName: string | null): this;
    getQuestGroupName(): string | null;
    setQuestGroupName(questGroupName: string | null): this;
    withQuestGroupName(questGroupName: string | null): this;
    getQuestName(): string | null;
    setQuestName(questName: string | null): this;
    withQuestName(questName: string | null): this;
    getDescription(): string | null;
    setDescription(description: string | null): this;
    withDescription(description: string | null): this;
    getMetadata(): string | null;
    setMetadata(metadata: string | null): this;
    withMetadata(metadata: string | null): this;
    getContents(): Gs2Quest.Contents[] | null;
    setContents(contents: Gs2Quest.Contents[] | null): this;
    withContents(contents: Gs2Quest.Contents[] | null): this;
    getChallengePeriodEventId(): string | null;
    setChallengePeriodEventId(challengePeriodEventId: string | null): this;
    withChallengePeriodEventId(challengePeriodEventId: string | null): this;
    getFirstCompleteAcquireActions(): Gs2Quest.AcquireAction[] | null;
    setFirstCompleteAcquireActions(firstCompleteAcquireActions: Gs2Quest.AcquireAction[] | null): this;
    withFirstCompleteAcquireActions(firstCompleteAcquireActions: Gs2Quest.AcquireAction[] | null): this;
    getVerifyActions(): Gs2Quest.VerifyAction[] | null;
    setVerifyActions(verifyActions: Gs2Quest.VerifyAction[] | null): this;
    withVerifyActions(verifyActions: Gs2Quest.VerifyAction[] | null): this;
    getConsumeActions(): Gs2Quest.ConsumeAction[] | null;
    setConsumeActions(consumeActions: Gs2Quest.ConsumeAction[] | null): this;
    withConsumeActions(consumeActions: Gs2Quest.ConsumeAction[] | null): this;
    getFailedAcquireActions(): Gs2Quest.AcquireAction[] | null;
    setFailedAcquireActions(failedAcquireActions: Gs2Quest.AcquireAction[] | null): this;
    withFailedAcquireActions(failedAcquireActions: Gs2Quest.AcquireAction[] | null): this;
    getPremiseQuestNames(): string[] | null;
    setPremiseQuestNames(premiseQuestNames: string[] | null): this;
    withPremiseQuestNames(premiseQuestNames: string[] | null): this;
    static fromDict(data: {
        [key: string]: any;
    }): UpdateQuestModelMasterRequest;
    toDict(): {
        [key: string]: any;
    };
}
