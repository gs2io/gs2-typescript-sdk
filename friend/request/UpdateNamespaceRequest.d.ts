import IRequest from '../../core/interface/IRequest';
import * as Gs2Friend from '../model';
export default class UpdateNamespaceRequest implements IRequest {
    private requestId;
    private contextStack;
    private namespaceName;
    private description;
    private followScript;
    private unfollowScript;
    private sendRequestScript;
    private cancelRequestScript;
    private acceptRequestScript;
    private rejectRequestScript;
    private deleteFriendScript;
    private updateProfileScript;
    private followNotification;
    private receiveRequestNotification;
    private acceptRequestNotification;
    private logSetting;
    getRequestId(): string | null;
    setRequestId(requestId: string | null): this;
    withRequestId(requestId: string | null): this;
    getContextStack(): string | null;
    setContextStack(contextStack: string | null): this;
    withContextStack(contextStack: string | null): this;
    getNamespaceName(): string | null;
    setNamespaceName(namespaceName: string | null): this;
    withNamespaceName(namespaceName: string | null): this;
    getDescription(): string | null;
    setDescription(description: string | null): this;
    withDescription(description: string | null): this;
    getFollowScript(): Gs2Friend.ScriptSetting | null;
    setFollowScript(followScript: Gs2Friend.ScriptSetting | null): this;
    withFollowScript(followScript: Gs2Friend.ScriptSetting | null): this;
    getUnfollowScript(): Gs2Friend.ScriptSetting | null;
    setUnfollowScript(unfollowScript: Gs2Friend.ScriptSetting | null): this;
    withUnfollowScript(unfollowScript: Gs2Friend.ScriptSetting | null): this;
    getSendRequestScript(): Gs2Friend.ScriptSetting | null;
    setSendRequestScript(sendRequestScript: Gs2Friend.ScriptSetting | null): this;
    withSendRequestScript(sendRequestScript: Gs2Friend.ScriptSetting | null): this;
    getCancelRequestScript(): Gs2Friend.ScriptSetting | null;
    setCancelRequestScript(cancelRequestScript: Gs2Friend.ScriptSetting | null): this;
    withCancelRequestScript(cancelRequestScript: Gs2Friend.ScriptSetting | null): this;
    getAcceptRequestScript(): Gs2Friend.ScriptSetting | null;
    setAcceptRequestScript(acceptRequestScript: Gs2Friend.ScriptSetting | null): this;
    withAcceptRequestScript(acceptRequestScript: Gs2Friend.ScriptSetting | null): this;
    getRejectRequestScript(): Gs2Friend.ScriptSetting | null;
    setRejectRequestScript(rejectRequestScript: Gs2Friend.ScriptSetting | null): this;
    withRejectRequestScript(rejectRequestScript: Gs2Friend.ScriptSetting | null): this;
    getDeleteFriendScript(): Gs2Friend.ScriptSetting | null;
    setDeleteFriendScript(deleteFriendScript: Gs2Friend.ScriptSetting | null): this;
    withDeleteFriendScript(deleteFriendScript: Gs2Friend.ScriptSetting | null): this;
    getUpdateProfileScript(): Gs2Friend.ScriptSetting | null;
    setUpdateProfileScript(updateProfileScript: Gs2Friend.ScriptSetting | null): this;
    withUpdateProfileScript(updateProfileScript: Gs2Friend.ScriptSetting | null): this;
    getFollowNotification(): Gs2Friend.NotificationSetting | null;
    setFollowNotification(followNotification: Gs2Friend.NotificationSetting | null): this;
    withFollowNotification(followNotification: Gs2Friend.NotificationSetting | null): this;
    getReceiveRequestNotification(): Gs2Friend.NotificationSetting | null;
    setReceiveRequestNotification(receiveRequestNotification: Gs2Friend.NotificationSetting | null): this;
    withReceiveRequestNotification(receiveRequestNotification: Gs2Friend.NotificationSetting | null): this;
    getAcceptRequestNotification(): Gs2Friend.NotificationSetting | null;
    setAcceptRequestNotification(acceptRequestNotification: Gs2Friend.NotificationSetting | null): this;
    withAcceptRequestNotification(acceptRequestNotification: Gs2Friend.NotificationSetting | null): this;
    getLogSetting(): Gs2Friend.LogSetting | null;
    setLogSetting(logSetting: Gs2Friend.LogSetting | null): this;
    withLogSetting(logSetting: Gs2Friend.LogSetting | null): this;
    static fromDict(data: {
        [key: string]: any;
    }): UpdateNamespaceRequest;
    toDict(): {
        [key: string]: any;
    };
}
