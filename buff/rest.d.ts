import AbstractGs2RestClient from '../core/AbstractGs2RestClient';
import { Gs2RestSession } from '../core/model';
import * as Request from './request';
import * as Result from './result';
export default class Gs2BuffRestClient extends AbstractGs2RestClient {
    constructor(session: Gs2RestSession);
    describeNamespaces(request: Request.DescribeNamespacesRequest): Promise<Result.DescribeNamespacesResult>;
    createNamespace(request: Request.CreateNamespaceRequest): Promise<Result.CreateNamespaceResult>;
    getNamespaceStatus(request: Request.GetNamespaceStatusRequest): Promise<Result.GetNamespaceStatusResult>;
    getNamespace(request: Request.GetNamespaceRequest): Promise<Result.GetNamespaceResult>;
    updateNamespace(request: Request.UpdateNamespaceRequest): Promise<Result.UpdateNamespaceResult>;
    deleteNamespace(request: Request.DeleteNamespaceRequest): Promise<Result.DeleteNamespaceResult>;
    dumpUserDataByUserId(request: Request.DumpUserDataByUserIdRequest): Promise<Result.DumpUserDataByUserIdResult>;
    checkDumpUserDataByUserId(request: Request.CheckDumpUserDataByUserIdRequest): Promise<Result.CheckDumpUserDataByUserIdResult>;
    cleanUserDataByUserId(request: Request.CleanUserDataByUserIdRequest): Promise<Result.CleanUserDataByUserIdResult>;
    checkCleanUserDataByUserId(request: Request.CheckCleanUserDataByUserIdRequest): Promise<Result.CheckCleanUserDataByUserIdResult>;
    prepareImportUserDataByUserId(request: Request.PrepareImportUserDataByUserIdRequest): Promise<Result.PrepareImportUserDataByUserIdResult>;
    importUserDataByUserId(request: Request.ImportUserDataByUserIdRequest): Promise<Result.ImportUserDataByUserIdResult>;
    checkImportUserDataByUserId(request: Request.CheckImportUserDataByUserIdRequest): Promise<Result.CheckImportUserDataByUserIdResult>;
    describeBuffEntryModels(request: Request.DescribeBuffEntryModelsRequest): Promise<Result.DescribeBuffEntryModelsResult>;
    getBuffEntryModel(request: Request.GetBuffEntryModelRequest): Promise<Result.GetBuffEntryModelResult>;
    describeBuffEntryModelMasters(request: Request.DescribeBuffEntryModelMastersRequest): Promise<Result.DescribeBuffEntryModelMastersResult>;
    createBuffEntryModelMaster(request: Request.CreateBuffEntryModelMasterRequest): Promise<Result.CreateBuffEntryModelMasterResult>;
    getBuffEntryModelMaster(request: Request.GetBuffEntryModelMasterRequest): Promise<Result.GetBuffEntryModelMasterResult>;
    updateBuffEntryModelMaster(request: Request.UpdateBuffEntryModelMasterRequest): Promise<Result.UpdateBuffEntryModelMasterResult>;
    deleteBuffEntryModelMaster(request: Request.DeleteBuffEntryModelMasterRequest): Promise<Result.DeleteBuffEntryModelMasterResult>;
    applyBuff(request: Request.ApplyBuffRequest): Promise<Result.ApplyBuffResult>;
    applyBuffByUserId(request: Request.ApplyBuffByUserIdRequest): Promise<Result.ApplyBuffByUserIdResult>;
    exportMaster(request: Request.ExportMasterRequest): Promise<Result.ExportMasterResult>;
    getCurrentBuffMaster(request: Request.GetCurrentBuffMasterRequest): Promise<Result.GetCurrentBuffMasterResult>;
    preUpdateCurrentBuffMaster(request: Request.PreUpdateCurrentBuffMasterRequest): Promise<Result.PreUpdateCurrentBuffMasterResult>;
    updateCurrentBuffMaster(request: Request.UpdateCurrentBuffMasterRequest): Promise<Result.UpdateCurrentBuffMasterResult>;
    updateCurrentBuffMasterFromGitHub(request: Request.UpdateCurrentBuffMasterFromGitHubRequest): Promise<Result.UpdateCurrentBuffMasterFromGitHubResult>;
}
