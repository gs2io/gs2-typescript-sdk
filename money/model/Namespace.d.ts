import IModel from '../../core/interface/IModel';
import * as Gs2Money from '../../money/model';
export default class Namespace implements IModel {
    private namespaceId;
    private name;
    private description;
    private priority;
    private shareFree;
    private currency;
    private appleKey;
    private googleKey;
    private enableFakeReceipt;
    private createWalletScript;
    private depositScript;
    private withdrawScript;
    private balance;
    private logSetting;
    private createdAt;
    private updatedAt;
    private revision;
    static getRegion(grn: string): string | null;
    static getOwnerId(grn: string): string | null;
    static getNamespaceName(grn: string): string | null;
    static isValid(grn: string): boolean;
    static createGrn(region: string | null, ownerId: string | null, namespaceName: string | null): string | null;
    getNamespaceId(): string | null;
    setNamespaceId(namespaceId: string | null): this;
    withNamespaceId(namespaceId: string | null): this;
    getName(): string | null;
    setName(name: string | null): this;
    withName(name: string | null): this;
    getDescription(): string | null;
    setDescription(description: string | null): this;
    withDescription(description: string | null): this;
    getPriority(): string | null;
    setPriority(priority: string | null): this;
    withPriority(priority: string | null): this;
    getShareFree(): boolean | null;
    setShareFree(shareFree: boolean | null): this;
    withShareFree(shareFree: boolean | null): this;
    getCurrency(): string | null;
    setCurrency(currency: string | null): this;
    withCurrency(currency: string | null): this;
    getAppleKey(): string | null;
    setAppleKey(appleKey: string | null): this;
    withAppleKey(appleKey: string | null): this;
    getGoogleKey(): string | null;
    setGoogleKey(googleKey: string | null): this;
    withGoogleKey(googleKey: string | null): this;
    getEnableFakeReceipt(): boolean | null;
    setEnableFakeReceipt(enableFakeReceipt: boolean | null): this;
    withEnableFakeReceipt(enableFakeReceipt: boolean | null): this;
    getCreateWalletScript(): Gs2Money.ScriptSetting | null;
    setCreateWalletScript(createWalletScript: Gs2Money.ScriptSetting | null): this;
    withCreateWalletScript(createWalletScript: Gs2Money.ScriptSetting | null): this;
    getDepositScript(): Gs2Money.ScriptSetting | null;
    setDepositScript(depositScript: Gs2Money.ScriptSetting | null): this;
    withDepositScript(depositScript: Gs2Money.ScriptSetting | null): this;
    getWithdrawScript(): Gs2Money.ScriptSetting | null;
    setWithdrawScript(withdrawScript: Gs2Money.ScriptSetting | null): this;
    withWithdrawScript(withdrawScript: Gs2Money.ScriptSetting | null): this;
    getBalance(): number | null;
    setBalance(balance: number | null): this;
    withBalance(balance: number | null): this;
    getLogSetting(): Gs2Money.LogSetting | null;
    setLogSetting(logSetting: Gs2Money.LogSetting | null): this;
    withLogSetting(logSetting: Gs2Money.LogSetting | null): this;
    getCreatedAt(): number | null;
    setCreatedAt(createdAt: number | null): this;
    withCreatedAt(createdAt: number | null): this;
    getUpdatedAt(): number | null;
    setUpdatedAt(updatedAt: number | null): this;
    withUpdatedAt(updatedAt: number | null): this;
    getRevision(): number | null;
    setRevision(revision: number | null): this;
    withRevision(revision: number | null): this;
    static fromDict(data: {
        [key: string]: any;
    }): Namespace | null;
    toDict(): {
        [key: string]: any;
    };
}
