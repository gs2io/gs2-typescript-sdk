import AbstractGs2RestClient from '../core/AbstractGs2RestClient';
import { Gs2RestSession } from '../core/model';
import * as Request from './request';
import * as Result from './result';
export default class Gs2StaminaRestClient extends AbstractGs2RestClient {
    constructor(session: Gs2RestSession);
    describeNamespaces(request: Request.DescribeNamespacesRequest): Promise<Result.DescribeNamespacesResult>;
    createNamespace(request: Request.CreateNamespaceRequest): Promise<Result.CreateNamespaceResult>;
    getNamespaceStatus(request: Request.GetNamespaceStatusRequest): Promise<Result.GetNamespaceStatusResult>;
    getNamespace(request: Request.GetNamespaceRequest): Promise<Result.GetNamespaceResult>;
    updateNamespace(request: Request.UpdateNamespaceRequest): Promise<Result.UpdateNamespaceResult>;
    deleteNamespace(request: Request.DeleteNamespaceRequest): Promise<Result.DeleteNamespaceResult>;
    describeStaminaModelMasters(request: Request.DescribeStaminaModelMastersRequest): Promise<Result.DescribeStaminaModelMastersResult>;
    createStaminaModelMaster(request: Request.CreateStaminaModelMasterRequest): Promise<Result.CreateStaminaModelMasterResult>;
    getStaminaModelMaster(request: Request.GetStaminaModelMasterRequest): Promise<Result.GetStaminaModelMasterResult>;
    updateStaminaModelMaster(request: Request.UpdateStaminaModelMasterRequest): Promise<Result.UpdateStaminaModelMasterResult>;
    deleteStaminaModelMaster(request: Request.DeleteStaminaModelMasterRequest): Promise<Result.DeleteStaminaModelMasterResult>;
    describeMaxStaminaTableMasters(request: Request.DescribeMaxStaminaTableMastersRequest): Promise<Result.DescribeMaxStaminaTableMastersResult>;
    createMaxStaminaTableMaster(request: Request.CreateMaxStaminaTableMasterRequest): Promise<Result.CreateMaxStaminaTableMasterResult>;
    getMaxStaminaTableMaster(request: Request.GetMaxStaminaTableMasterRequest): Promise<Result.GetMaxStaminaTableMasterResult>;
    updateMaxStaminaTableMaster(request: Request.UpdateMaxStaminaTableMasterRequest): Promise<Result.UpdateMaxStaminaTableMasterResult>;
    deleteMaxStaminaTableMaster(request: Request.DeleteMaxStaminaTableMasterRequest): Promise<Result.DeleteMaxStaminaTableMasterResult>;
    describeRecoverIntervalTableMasters(request: Request.DescribeRecoverIntervalTableMastersRequest): Promise<Result.DescribeRecoverIntervalTableMastersResult>;
    createRecoverIntervalTableMaster(request: Request.CreateRecoverIntervalTableMasterRequest): Promise<Result.CreateRecoverIntervalTableMasterResult>;
    getRecoverIntervalTableMaster(request: Request.GetRecoverIntervalTableMasterRequest): Promise<Result.GetRecoverIntervalTableMasterResult>;
    updateRecoverIntervalTableMaster(request: Request.UpdateRecoverIntervalTableMasterRequest): Promise<Result.UpdateRecoverIntervalTableMasterResult>;
    deleteRecoverIntervalTableMaster(request: Request.DeleteRecoverIntervalTableMasterRequest): Promise<Result.DeleteRecoverIntervalTableMasterResult>;
    describeRecoverValueTableMasters(request: Request.DescribeRecoverValueTableMastersRequest): Promise<Result.DescribeRecoverValueTableMastersResult>;
    createRecoverValueTableMaster(request: Request.CreateRecoverValueTableMasterRequest): Promise<Result.CreateRecoverValueTableMasterResult>;
    getRecoverValueTableMaster(request: Request.GetRecoverValueTableMasterRequest): Promise<Result.GetRecoverValueTableMasterResult>;
    updateRecoverValueTableMaster(request: Request.UpdateRecoverValueTableMasterRequest): Promise<Result.UpdateRecoverValueTableMasterResult>;
    deleteRecoverValueTableMaster(request: Request.DeleteRecoverValueTableMasterRequest): Promise<Result.DeleteRecoverValueTableMasterResult>;
    exportMaster(request: Request.ExportMasterRequest): Promise<Result.ExportMasterResult>;
    getCurrentStaminaMaster(request: Request.GetCurrentStaminaMasterRequest): Promise<Result.GetCurrentStaminaMasterResult>;
    updateCurrentStaminaMaster(request: Request.UpdateCurrentStaminaMasterRequest): Promise<Result.UpdateCurrentStaminaMasterResult>;
    updateCurrentStaminaMasterFromGitHub(request: Request.UpdateCurrentStaminaMasterFromGitHubRequest): Promise<Result.UpdateCurrentStaminaMasterFromGitHubResult>;
    describeStaminaModels(request: Request.DescribeStaminaModelsRequest): Promise<Result.DescribeStaminaModelsResult>;
    getStaminaModel(request: Request.GetStaminaModelRequest): Promise<Result.GetStaminaModelResult>;
    describeStaminas(request: Request.DescribeStaminasRequest): Promise<Result.DescribeStaminasResult>;
    describeStaminasByUserId(request: Request.DescribeStaminasByUserIdRequest): Promise<Result.DescribeStaminasByUserIdResult>;
    getStamina(request: Request.GetStaminaRequest): Promise<Result.GetStaminaResult>;
    getStaminaByUserId(request: Request.GetStaminaByUserIdRequest): Promise<Result.GetStaminaByUserIdResult>;
    updateStaminaByUserId(request: Request.UpdateStaminaByUserIdRequest): Promise<Result.UpdateStaminaByUserIdResult>;
    consumeStamina(request: Request.ConsumeStaminaRequest): Promise<Result.ConsumeStaminaResult>;
    consumeStaminaByUserId(request: Request.ConsumeStaminaByUserIdRequest): Promise<Result.ConsumeStaminaByUserIdResult>;
    recoverStaminaByUserId(request: Request.RecoverStaminaByUserIdRequest): Promise<Result.RecoverStaminaByUserIdResult>;
    raiseMaxValueByUserId(request: Request.RaiseMaxValueByUserIdRequest): Promise<Result.RaiseMaxValueByUserIdResult>;
    setMaxValueByUserId(request: Request.SetMaxValueByUserIdRequest): Promise<Result.SetMaxValueByUserIdResult>;
    setRecoverIntervalByUserId(request: Request.SetRecoverIntervalByUserIdRequest): Promise<Result.SetRecoverIntervalByUserIdResult>;
    setRecoverValueByUserId(request: Request.SetRecoverValueByUserIdRequest): Promise<Result.SetRecoverValueByUserIdResult>;
    setMaxValueByStatus(request: Request.SetMaxValueByStatusRequest): Promise<Result.SetMaxValueByStatusResult>;
    setRecoverIntervalByStatus(request: Request.SetRecoverIntervalByStatusRequest): Promise<Result.SetRecoverIntervalByStatusResult>;
    setRecoverValueByStatus(request: Request.SetRecoverValueByStatusRequest): Promise<Result.SetRecoverValueByStatusResult>;
    deleteStaminaByUserId(request: Request.DeleteStaminaByUserIdRequest): Promise<Result.DeleteStaminaByUserIdResult>;
    recoverStaminaByStampSheet(request: Request.RecoverStaminaByStampSheetRequest): Promise<Result.RecoverStaminaByStampSheetResult>;
    raiseMaxValueByStampSheet(request: Request.RaiseMaxValueByStampSheetRequest): Promise<Result.RaiseMaxValueByStampSheetResult>;
    setMaxValueByStampSheet(request: Request.SetMaxValueByStampSheetRequest): Promise<Result.SetMaxValueByStampSheetResult>;
    setRecoverIntervalByStampSheet(request: Request.SetRecoverIntervalByStampSheetRequest): Promise<Result.SetRecoverIntervalByStampSheetResult>;
    setRecoverValueByStampSheet(request: Request.SetRecoverValueByStampSheetRequest): Promise<Result.SetRecoverValueByStampSheetResult>;
    consumeStaminaByStampTask(request: Request.ConsumeStaminaByStampTaskRequest): Promise<Result.ConsumeStaminaByStampTaskResult>;
}
