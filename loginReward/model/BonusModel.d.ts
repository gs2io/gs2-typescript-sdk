import IModel from '../../core/interface/IModel';
import * as Gs2LoginReward from '../../loginReward/model';
export default class BonusModel implements IModel {
    private bonusModelId;
    private name;
    private metadata;
    private mode;
    private periodEventId;
    private resetHour;
    private repeat;
    private rewards;
    private missedReceiveRelief;
    private missedReceiveReliefVerifyActions;
    private missedReceiveReliefConsumeActions;
    static getRegion(grn: string): string | null;
    static getOwnerId(grn: string): string | null;
    static getNamespaceName(grn: string): string | null;
    static getBonusModelName(grn: string): string | null;
    static isValid(grn: string): boolean;
    static createGrn(region: string | null, ownerId: string | null, namespaceName: string | null, bonusModelName: string | null): string | null;
    getBonusModelId(): string | null;
    setBonusModelId(bonusModelId: string | null): this;
    withBonusModelId(bonusModelId: string | null): this;
    getName(): string | null;
    setName(name: string | null): this;
    withName(name: string | null): this;
    getMetadata(): string | null;
    setMetadata(metadata: string | null): this;
    withMetadata(metadata: string | null): this;
    getMode(): string | null;
    setMode(mode: string | null): this;
    withMode(mode: string | null): this;
    getPeriodEventId(): string | null;
    setPeriodEventId(periodEventId: string | null): this;
    withPeriodEventId(periodEventId: string | null): this;
    getResetHour(): number | null;
    setResetHour(resetHour: number | null): this;
    withResetHour(resetHour: number | null): this;
    getRepeat(): string | null;
    setRepeat(repeat: string | null): this;
    withRepeat(repeat: string | null): this;
    getRewards(): Gs2LoginReward.Reward[] | null;
    setRewards(rewards: Gs2LoginReward.Reward[] | null): this;
    withRewards(rewards: Gs2LoginReward.Reward[] | null): this;
    getMissedReceiveRelief(): string | null;
    setMissedReceiveRelief(missedReceiveRelief: string | null): this;
    withMissedReceiveRelief(missedReceiveRelief: string | null): this;
    getMissedReceiveReliefVerifyActions(): Gs2LoginReward.VerifyAction[] | null;
    setMissedReceiveReliefVerifyActions(missedReceiveReliefVerifyActions: Gs2LoginReward.VerifyAction[] | null): this;
    withMissedReceiveReliefVerifyActions(missedReceiveReliefVerifyActions: Gs2LoginReward.VerifyAction[] | null): this;
    getMissedReceiveReliefConsumeActions(): Gs2LoginReward.ConsumeAction[] | null;
    setMissedReceiveReliefConsumeActions(missedReceiveReliefConsumeActions: Gs2LoginReward.ConsumeAction[] | null): this;
    withMissedReceiveReliefConsumeActions(missedReceiveReliefConsumeActions: Gs2LoginReward.ConsumeAction[] | null): this;
    static fromDict(data: {
        [key: string]: any;
    }): BonusModel | null;
    toDict(): {
        [key: string]: any;
    };
}
