import AbstractGs2RestClient from '../core/AbstractGs2RestClient';
import { Gs2RestSession } from '../core/model';
import * as Request from './request';
import * as Result from './result';
export default class Gs2LoginRewardRestClient extends AbstractGs2RestClient {
    constructor(session: Gs2RestSession);
    describeNamespaces(request: Request.DescribeNamespacesRequest): Promise<Result.DescribeNamespacesResult>;
    createNamespace(request: Request.CreateNamespaceRequest): Promise<Result.CreateNamespaceResult>;
    getNamespaceStatus(request: Request.GetNamespaceStatusRequest): Promise<Result.GetNamespaceStatusResult>;
    getNamespace(request: Request.GetNamespaceRequest): Promise<Result.GetNamespaceResult>;
    updateNamespace(request: Request.UpdateNamespaceRequest): Promise<Result.UpdateNamespaceResult>;
    deleteNamespace(request: Request.DeleteNamespaceRequest): Promise<Result.DeleteNamespaceResult>;
    describeBonusModelMasters(request: Request.DescribeBonusModelMastersRequest): Promise<Result.DescribeBonusModelMastersResult>;
    createBonusModelMaster(request: Request.CreateBonusModelMasterRequest): Promise<Result.CreateBonusModelMasterResult>;
    getBonusModelMaster(request: Request.GetBonusModelMasterRequest): Promise<Result.GetBonusModelMasterResult>;
    updateBonusModelMaster(request: Request.UpdateBonusModelMasterRequest): Promise<Result.UpdateBonusModelMasterResult>;
    deleteBonusModelMaster(request: Request.DeleteBonusModelMasterRequest): Promise<Result.DeleteBonusModelMasterResult>;
    exportMaster(request: Request.ExportMasterRequest): Promise<Result.ExportMasterResult>;
    getCurrentBonusMaster(request: Request.GetCurrentBonusMasterRequest): Promise<Result.GetCurrentBonusMasterResult>;
    updateCurrentBonusMaster(request: Request.UpdateCurrentBonusMasterRequest): Promise<Result.UpdateCurrentBonusMasterResult>;
    updateCurrentBonusMasterFromGitHub(request: Request.UpdateCurrentBonusMasterFromGitHubRequest): Promise<Result.UpdateCurrentBonusMasterFromGitHubResult>;
    describeBonusModels(request: Request.DescribeBonusModelsRequest): Promise<Result.DescribeBonusModelsResult>;
    getBonusModel(request: Request.GetBonusModelRequest): Promise<Result.GetBonusModelResult>;
    receive(request: Request.ReceiveRequest): Promise<Result.ReceiveResult>;
    receiveByUserId(request: Request.ReceiveByUserIdRequest): Promise<Result.ReceiveByUserIdResult>;
    missedReceive(request: Request.MissedReceiveRequest): Promise<Result.MissedReceiveResult>;
    missedReceiveByUserId(request: Request.MissedReceiveByUserIdRequest): Promise<Result.MissedReceiveByUserIdResult>;
    describeReceiveStatuses(request: Request.DescribeReceiveStatusesRequest): Promise<Result.DescribeReceiveStatusesResult>;
    describeReceiveStatusesByUserId(request: Request.DescribeReceiveStatusesByUserIdRequest): Promise<Result.DescribeReceiveStatusesByUserIdResult>;
    getReceiveStatus(request: Request.GetReceiveStatusRequest): Promise<Result.GetReceiveStatusResult>;
    getReceiveStatusByUserId(request: Request.GetReceiveStatusByUserIdRequest): Promise<Result.GetReceiveStatusByUserIdResult>;
    deleteReceiveStatusByUserId(request: Request.DeleteReceiveStatusByUserIdRequest): Promise<Result.DeleteReceiveStatusByUserIdResult>;
    deleteReceiveStatusByStampSheet(request: Request.DeleteReceiveStatusByStampSheetRequest): Promise<Result.DeleteReceiveStatusByStampSheetResult>;
    markReceived(request: Request.MarkReceivedRequest): Promise<Result.MarkReceivedResult>;
    markReceivedByUserId(request: Request.MarkReceivedByUserIdRequest): Promise<Result.MarkReceivedByUserIdResult>;
    unmarkReceivedByUserId(request: Request.UnmarkReceivedByUserIdRequest): Promise<Result.UnmarkReceivedByUserIdResult>;
    markReceivedByStampTask(request: Request.MarkReceivedByStampTaskRequest): Promise<Result.MarkReceivedByStampTaskResult>;
    unmarkReceivedByStampSheet(request: Request.UnmarkReceivedByStampSheetRequest): Promise<Result.UnmarkReceivedByStampSheetResult>;
}
