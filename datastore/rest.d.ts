import AbstractGs2RestClient from '../core/AbstractGs2RestClient';
import { Gs2RestSession } from '../core/model';
import * as Request from './request';
import * as Result from './result';
export default class Gs2DatastoreRestClient extends AbstractGs2RestClient {
    static ENDPOINT_HOST: string | null;
    constructor(session: Gs2RestSession);
    describeNamespaces(request: Request.DescribeNamespacesRequest): Promise<Result.DescribeNamespacesResult>;
    createNamespace(request: Request.CreateNamespaceRequest): Promise<Result.CreateNamespaceResult>;
    getNamespaceStatus(request: Request.GetNamespaceStatusRequest): Promise<Result.GetNamespaceStatusResult>;
    getNamespace(request: Request.GetNamespaceRequest): Promise<Result.GetNamespaceResult>;
    updateNamespace(request: Request.UpdateNamespaceRequest): Promise<Result.UpdateNamespaceResult>;
    deleteNamespace(request: Request.DeleteNamespaceRequest): Promise<Result.DeleteNamespaceResult>;
    getServiceVersion(request: Request.GetServiceVersionRequest): Promise<Result.GetServiceVersionResult>;
    dumpUserDataByUserId(request: Request.DumpUserDataByUserIdRequest): Promise<Result.DumpUserDataByUserIdResult>;
    checkDumpUserDataByUserId(request: Request.CheckDumpUserDataByUserIdRequest): Promise<Result.CheckDumpUserDataByUserIdResult>;
    cleanUserDataByUserId(request: Request.CleanUserDataByUserIdRequest): Promise<Result.CleanUserDataByUserIdResult>;
    checkCleanUserDataByUserId(request: Request.CheckCleanUserDataByUserIdRequest): Promise<Result.CheckCleanUserDataByUserIdResult>;
    prepareImportUserDataByUserId(request: Request.PrepareImportUserDataByUserIdRequest): Promise<Result.PrepareImportUserDataByUserIdResult>;
    importUserDataByUserId(request: Request.ImportUserDataByUserIdRequest): Promise<Result.ImportUserDataByUserIdResult>;
    checkImportUserDataByUserId(request: Request.CheckImportUserDataByUserIdRequest): Promise<Result.CheckImportUserDataByUserIdResult>;
    describeDataObjects(request: Request.DescribeDataObjectsRequest): Promise<Result.DescribeDataObjectsResult>;
    describeDataObjectsByUserId(request: Request.DescribeDataObjectsByUserIdRequest): Promise<Result.DescribeDataObjectsByUserIdResult>;
    prepareUpload(request: Request.PrepareUploadRequest): Promise<Result.PrepareUploadResult>;
    prepareUploadByUserId(request: Request.PrepareUploadByUserIdRequest): Promise<Result.PrepareUploadByUserIdResult>;
    updateDataObject(request: Request.UpdateDataObjectRequest): Promise<Result.UpdateDataObjectResult>;
    updateDataObjectByUserId(request: Request.UpdateDataObjectByUserIdRequest): Promise<Result.UpdateDataObjectByUserIdResult>;
    prepareReUpload(request: Request.PrepareReUploadRequest): Promise<Result.PrepareReUploadResult>;
    prepareReUploadByUserId(request: Request.PrepareReUploadByUserIdRequest): Promise<Result.PrepareReUploadByUserIdResult>;
    doneUpload(request: Request.DoneUploadRequest): Promise<Result.DoneUploadResult>;
    doneUploadByUserId(request: Request.DoneUploadByUserIdRequest): Promise<Result.DoneUploadByUserIdResult>;
    deleteDataObject(request: Request.DeleteDataObjectRequest): Promise<Result.DeleteDataObjectResult>;
    deleteDataObjectByUserId(request: Request.DeleteDataObjectByUserIdRequest): Promise<Result.DeleteDataObjectByUserIdResult>;
    prepareDownload(request: Request.PrepareDownloadRequest): Promise<Result.PrepareDownloadResult>;
    prepareDownloadByUserId(request: Request.PrepareDownloadByUserIdRequest): Promise<Result.PrepareDownloadByUserIdResult>;
    prepareDownloadByGeneration(request: Request.PrepareDownloadByGenerationRequest): Promise<Result.PrepareDownloadByGenerationResult>;
    prepareDownloadByGenerationAndUserId(request: Request.PrepareDownloadByGenerationAndUserIdRequest): Promise<Result.PrepareDownloadByGenerationAndUserIdResult>;
    prepareDownloadOwnData(request: Request.PrepareDownloadOwnDataRequest): Promise<Result.PrepareDownloadOwnDataResult>;
    prepareDownloadByUserIdAndDataObjectName(request: Request.PrepareDownloadByUserIdAndDataObjectNameRequest): Promise<Result.PrepareDownloadByUserIdAndDataObjectNameResult>;
    prepareDownloadOwnDataByGeneration(request: Request.PrepareDownloadOwnDataByGenerationRequest): Promise<Result.PrepareDownloadOwnDataByGenerationResult>;
    prepareDownloadByUserIdAndDataObjectNameAndGeneration(request: Request.PrepareDownloadByUserIdAndDataObjectNameAndGenerationRequest): Promise<Result.PrepareDownloadByUserIdAndDataObjectNameAndGenerationResult>;
    restoreDataObject(request: Request.RestoreDataObjectRequest): Promise<Result.RestoreDataObjectResult>;
    describeDataObjectHistories(request: Request.DescribeDataObjectHistoriesRequest): Promise<Result.DescribeDataObjectHistoriesResult>;
    describeDataObjectHistoriesByUserId(request: Request.DescribeDataObjectHistoriesByUserIdRequest): Promise<Result.DescribeDataObjectHistoriesByUserIdResult>;
    getDataObjectHistory(request: Request.GetDataObjectHistoryRequest): Promise<Result.GetDataObjectHistoryResult>;
    getDataObjectHistoryByUserId(request: Request.GetDataObjectHistoryByUserIdRequest): Promise<Result.GetDataObjectHistoryByUserIdResult>;
}
